CompletableFuture 클래스

supplyAsync
- Supplier를 제공하여 CompletableFuture를 생성 가능하다.
- Supplier의 반환값이 CompletableFuture의 결과로 반환된다.

runAsync
- Runnable를 제공하여 CompletableFuture를 생성한다. 받는값도 리턴값도 없다.
- 다음 task에 null이 전달된다.

complete
- CompletableFuture가 완료되지 않았다면 주어진 값으로 채운다.
- complete에 의해서 상태가 바뀌었다면 true, 아니라면 false로 반환한다.

CompletableFuture<Integer> future = new CompletableFuture<>();
assert !future.isDone();

var triggered = future.complete(1);
assert future.isDone();
assert triggered;
assert future.get() ==1;

triggered =  future.complete(2);
assert future.isDone();
assert !triggered;
assert future.get() ==1;

isCompletedExceptionally
- Exception에 의해서 complete 되었는지 확인할 수 있다.

allOf
- 여러 completableFuture를 모아서 하나의 completableFuture로 변환할 수 있다.
- 모든 completableFuture가 완료되면 상태가 done으로 변경된다.
- Void를 반환하므로 각각의 값에 get으로 접근해야 한다.

anyOf
- 여러 completableFuture를 모아서 하나의 completableFuture로 변환할 수 있다.
- 주어진 future중 하나라도 완료되면 상태가 done으로 변경
- 제일 먼저 done상태가 되는 future 값을 반환

comletableFuture의 한계
- 지연 로딩 기능을 제공하지 않는다. completablefuture를 반환하는 함수를 호출 시 즉시 작업이 실행된다.
- 지속적으로 생성되는 데이터를 처리하기 어렵다
- CompletableFuture에서 데이터를 반환하고 나면 다시 다른 값을 전달하기 어렵다.